
apiVersion: v1
kind: Secret
metadata:
  name: lldap-credentials
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "lldap-credentials" ) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $jwtSecret to existing secret data or generate a random one when not exists
  {{- $jwtSecret := (get $secretData "lldap-jwt-secret") | default (randAlphaNum 32 | b64enc) }}
  {{- $userPass := (get $secretData "lldap-ldap-user-pass") | default (randAlphaNum 16 | b64enc) }}
  lldap-jwt-secret: {{ $jwtSecret | quote }}
  lldap-ldap-user-pass : {{ $userPass | quote }}